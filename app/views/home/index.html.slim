/ app/views/home/index.html.slim
.container.my-4
  / ===== Hero / Header =====
  .pb-3.mb-4.border-bottom.site-header
    h1.h3.mb-1.logo Naked & Afraid — Fan Database
    p.subtitle  Stats, episodes, survivors, items, and locations.

  / ===== Quick Stats =====
  .row.g-3.mb-4
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:series]
          small.text-muted Series
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:seasons]
          small.text-muted Seasons
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:episodes]
          small.text-muted Episodes
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:survivors]
          small.text-muted Survivors
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:items]
          small.text-muted Items
    .col-6.col-md-4.col-lg-2
      .card.text-center.shadow-sm
        .card-body.py-3
          div.h4.mb-0 = @counts[:locations]
          small.text-muted Locations

  / ===== Latest Episode + Recent Episodes =====
  .row.g-4.mb-4
    .col-lg-7
      .card.shadow-sm
        .card-header Latest Episode
        - if @latest_episode
          - ep = @latest_episode
          - series_name = ep.season&.series&.name
          - season_num  = ep.season&.number
          - loc = ep.location
          - loc_str = [loc&.country, loc&.region, loc&.site].compact.join(" • ")
          - air_str = ep.air_date&.strftime("%b %-d, %Y") || "—"
          .card-body
            h5.card-title.mb-1 = link_to(ep.title.presence || "Untitled", episode_path(ep), class: "link-primary")
            p.text-muted.mb-2
              = [series_name, ("Season #{season_num}" if season_num)].compact.join(" — ")
            - if loc_str.present?
              p.mb-2
                i.me-1.bi.bi-geo
                = loc_str
            span.badge.bg-secondary = "Aired #{air_str}"
        - else
          .card-body
            .alert.alert-info.mb-0 No episodes yet.

    .col-lg-5
      .card.shadow-sm
        .card-header Recent Episodes
        - if @recent_episodes.present?
          .list-group.list-group-flush
            - @recent_episodes.each do |ep|
              - air = ep.air_date&.strftime("%b %-d, %Y") || "—"
              - series_name = ep.season&.series&.name
              a.list-group-item.d-flex.justify-content-between.align-items-start href=episode_path(ep)
                .me-2
                  div.fw-semibold = ep.title.presence || "Untitled"
                  small.text-muted = [series_name, air].compact.join(" · ")
                span.badge.text-bg-light &rsaquo;
        - else
          .card-body
            .text-muted No recent episodes.

  / ===== Top Items =====
  .row.g-4.mb-4
    .col-lg-6
      .card.shadow-sm
        .card-header Top Items — Brought
        - if @top_items_brought.present?
          .table-responsive
            table.table.table-sm.mb-0
              thead
                tr
                  th Name
                  th.text-end Total
              tbody
                - @top_items_brought.each do |row|
                  tr
                    td = link_to row.name, item_path(row.id)
                    td.text-end = row.total
        - else
          .card-body
            .text-muted No data.

    .col-lg-6
      .card.shadow-sm
        .card-header Top Items — Given
        - if @top_items_given.present?
          .table-responsive
            table.table.table-sm.mb-0
              thead
                tr
                  th Name
                  th.text-end Total
              tbody
                - @top_items_given.each do |row|
                  tr
                    td = link_to row.name, item_path(row.id)
                    td.text-end = row.total
        - else
          .card-body
            .text-muted No data.

  / ===== Active Survivors =====
  .card.shadow-sm.mb-4
    .card-header Recently Active Survivors
    - if @active_survivors.present?
      .card-body
        .row.g-3
          - @active_survivors.each do |s|
            - display = (s.try(:name) || s.try(:full_name) || [s.try(:first_name), s.try(:last_name)].compact.join(" ")).presence || "Survivor ##{s.id}"
            .col-6.col-md-4.col-lg-2
              .border.rounded.p-3.h-100
                div.fw-semibold.mb-1 = link_to display, survivor_path(s)
                small.text-muted = "Appearances: #{(s.try(:appearances_count) || s.appearances.size)}"
    - else
      .card-body
        .text-muted No survivors yet.

  / ===== Top Countries =====
  .card.shadow-sm
    .card-header Top Countries by Episode Count
    - if @top_countries.present?
      .list-group.list-group-flush
        - @top_countries.each do |country, count|
          .list-group-item.d-flex.justify-content-between.align-items-center
            = country.presence || "Unknown"
            span.badge.text-bg-secondary = count
    - else
      .card-body
        .text-muted No country data yet.
