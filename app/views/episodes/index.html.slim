- content_for :title, "Episodes"

- if @location
  / === Filtered by location ===
  .pb-2.mb-3.border-bottom.site-header
    .d-flex.align-items-center.justify-content-between.flex-wrap.gap-2
      h1.h3.mb-0.logo Episodes at this location
      = link_to "All locations", locations_path, class: "btn btn-outline-secondary btn-sm"
    p.subtitle.mb-0 = [@location.site, @location.region, @location.country].compact_blank.join(", ")

  .card.shadow-sm
    .card-header Episodes
    .table-responsive
      table.table.table-striped.table-hover.mb-0
        thead.table-light
          tr
            th(scope="col") Episode
            th(scope="col") Season
            th(scope="col") Air Date
            th(scope="col") Location
            th(scope="col") Survivors
        tbody
          - if @episodes.blank?
            tr
              td(colspan="5" class="text-muted text-center py-4") No episodes found for this location.
          - else
            - @episodes.each do |ep|
              tr
                td = link_to "#{ep.title.presence || "Episode"} ##{ep.number_in_season || ep.id}", episode_path(ep)
                td = "S#{ep.season&.number} • #{ep.season&.series&.name}"
                td = ep.air_date ? ep.air_date.strftime("%b %-d, %Y") : "—"
                td = [ep.location&.country, ep.location&.region, ep.location&.site].compact_blank.join(", ").presence || "—"
                td = ep.survivors.map(&:full_name).join(", ").presence || "—"

- elsif defined?(@season) && @season.present?
  / === Filtered by season ===
  .pb-2.mb-3.border-bottom.site-header
    .d-flex.align-items-center.justify-content-between.flex-wrap.gap-2
      h1.h3.mb-0.logo = "Season #{@season.number} • #{@season.series.name}"
      = link_to "All seasons", episodes_path, class: "btn btn-outline-secondary btn-sm"
    p.subtitle.mb-0 = "All #{@episodes.size} episode(s) in this season"

  .card.shadow-sm
    .card-header Episodes
    .table-responsive
      table.table.table-striped.table-hover.mb-0
        thead.table-light
          tr
            th(scope="col") Episode
            th(scope="col") Air Date
            th(scope="col") Location
            th(scope="col") Survivors
        tbody
          - if @episodes.blank?
            tr
              td(colspan="4" class="text-muted text-center py-4") No episodes found for this season.
          - else
            - @episodes.each do |ep|
              tr
                td = link_to "#{ep.title.presence || "Episode"} ##{ep.number_in_season || ep.id}", episode_path(ep)
                td = ep.air_date ? ep.air_date.strftime("%b %-d, %Y") : "—"
                td = [ep.location&.country, ep.location&.region, ep.location&.site].compact_blank.join(", ").presence || "—"
                td = ep.survivors.map(&:full_name).join(", ").presence || "—"

- else
  / === Overview (cards per season, with 'View all' link) ===
  .pb-2.mb-3.border-bottom.site-header
    .d-flex.align-items-center.justify-content-between.flex-wrap.gap-2
      h1.h3.mb-0.logo Episodes
      = link_to "All locations", locations_path, class: "btn btn-outline-secondary btn-sm"

  / === Season jump select ===
  .form-floating.mb-3(style="max-width: 360px;" data-controller="season-jump")
    select.form-select#season-jump data-season-jump-target="select" data-action="change->season-jump#jump"
      option value="" 
      - @seasons.each do |s|
        option value="season-#{s.id}" = "#{s.series.name} • S#{s.number}"
    label for="season-jump" Jump to a season

  - @seasons.each do |season|
    .card.shadow-sm.mb-3(id="season-#{season.id}")
      .card-header
        .d-flex.align-items-center.justify-content-between
          .fw-semibold = "#{season.series.name} — Season #{season.number}"
          - if season.continuous_story_effective?
            .badge.text-bg-warning.ms-2 Continuous Story
      - if @episodes_by_season[season].present?
        .list-group.list-group-flush
          - @episodes_by_season[season].each do |ep|
            .list-group-item
              .d-flex.justify-content-between.align-items-start
                .me-3
                  = link_to "#{ep.title.presence || "Episode"} ##{ep.number_in_season || ep.id}", episode_path(ep), class: "fw-semibold"
                  .small.text-muted = ep.air_date ? ep.air_date.strftime("%b %-d, %Y") : "—"
                  .small.text-muted = [ep.location&.country, ep.location&.region, ep.location&.site].compact_blank.join(", ").presence || "—"
                .text-end.small.text-muted
                  = ep.survivors.map(&:full_name).join(", ").presence || "—"
        - count = @episode_counts[season.id].to_i
        - if count > 3
          .px-3.pb-3
            = link_to "View all #{count} episodes",
                      episodes_path(season_id: season.id),
                      class: "btn btn-outline-primary btn-sm"
      - else
        .card-body
          .text-muted.py-4.px-3 No episodes yet in this season.



style
    | [id^="season-"] { scroll-margin-top: 80px; }
