/ ===== SEO + JSON-LD: Seasons Index =====
- seasons_list  = Array(@seasons)
- total_seasons = seasons_list.size
- total_episodes = seasons_list.sum { |s| (s.respond_to?(:episodes) ? s.episodes.size : 0) }

- content_for :title, "Naked and Afraid Seasons"
- content_for :meta_description, "Browse #{total_seasons} seasons (#{total_episodes} total episodes) of Naked and Afraid. Jump to a series and find where to watch."
- content_for :keywords, "Naked and Afraid seasons, episode guide, where to watch"
- content_for :canonical_url, request.original_url
- content_for :og_title, "Naked and Afraid Seasons"
- content_for :og_description, "All seasons organized by series with episode counts and streaming links."

/ JSON blob for schema (helper builds JSON; single line keeps Slim happy)
- data = seasons_index_json_payload(seasons: seasons_list)
script type="application/json" id="seasons-index-jsonld-data"= data
= javascript_import_module_tag "json_ld/seasons_index", defer: true
/ ===== end SEO + JSON-LD =====


.pb-2.mb-3.border-bottom.site-header
  .d-flex.align-items-center.justify-content-between.flex-wrap.gap-2
    h1.h3.mb-0.logo Seasons

- if @seasons.blank?
  .text-muted.py-5.text-center No seasons found.
- else
  / === Series jump select (Stimulus) ===
  .form-floating.mb-3(style="max-width: 360px;" data-controller="season-jump")
    select.form-select#series-jump data-season-jump-target="select" data-action="change->season-jump#jump"
      option value="" 
      - @seasons.group_by(&:series).each do |series, _|
        - next unless series
        option value="series-#{series.id}" = series.name
    label for="series-jump" Jump to a series

  - @seasons.group_by(&:series).each do |series, seasons|
    .card.shadow-sm.mb-4(id=(series ? "series-#{series.id}" : nil))
      .card-header
        h2.h5.mb-0 = series&.name || "Unknown Series"

      .table-responsive
        table.table.table-striped.table-hover.mb-0
          thead.table-light
            tr
              th Season
              th Episodes
              th Where to Watch
          tbody
            - seasons.sort_by(&:number).each do |season|
              tr
                td.fw-semibold
                  = link_to "Season #{season.number}", season_path(season), class: "text-decoration-none"
                td = season.respond_to?(:episodes) ? season.episodes.size : "â€”"
                td
                  .d-flex.flex-wrap.gap-2
                    = link_to (season.respond_to?(:discovery_plus_url) && season.discovery_plus_url.presence) || "https://www.discoveryplus.com",
                              target: "_blank", rel: "noopener",
                              class: "btn btn-primary btn-sm" do
                      | Discovery+
                    = link_to (season.respond_to?(:max_url) && season.max_url.presence) || "#",
                              class: "btn btn-outline-secondary btn-sm#{(season.respond_to?(:max_url) && season.max_url.present?) ? '' : ' disabled'}",
                              target: ((season.respond_to?(:max_url) && season.max_url.present?) ? "_blank" : nil),
                              rel: ((season.respond_to?(:max_url) && season.max_url.present?) ? "noopener" : nil) do
                      | Max
                    = link_to (season.respond_to?(:prime_video_url) && season.prime_video_url.presence) || "#",
                              class: "btn btn-outline-secondary btn-sm#{(season.respond_to?(:prime_video_url) && season.prime_video_url.present?) ? '' : ' disabled'}",
                              target: ((season.respond_to?(:prime_video_url) && season.prime_video_url.present?) ? "_blank" : nil),
                              rel: ((season.respond_to?(:prime_video_url) && season.prime_video_url.present?) ? "noopener" : nil) do
                      | Prime Video
                    = link_to (season.respond_to?(:apple_tv_url) && season.apple_tv_url.presence) || "#",
                              class: "btn btn-outline-secondary btn-sm#{(season.respond_to?(:apple_tv_url) && season.apple_tv_url.present?) ? '' : ' disabled'}",
                              target: ((season.respond_to?(:apple_tv_url) && season.apple_tv_url.present?) ? "_blank" : nil),
                              rel: ((season.respond_to?(:apple_tv_url) && season.apple_tv_url.present?) ? "noopener" : nil) do
                      | Apple TV
                    = link_to (season.respond_to?(:youtube_url) && season.youtube_url.presence) || "#",
                              class: "btn btn-outline-secondary btn-sm#{(season.respond_to?(:youtube_url) && season.youtube_url.present?) ? '' : ' disabled'}",
                              target: ((season.respond_to?(:youtube_url) && season.youtube_url.present?) ? "_blank" : nil),
                              rel: ((season.respond_to?(:youtube_url) && season.youtube_url.present?) ? "noopener" : nil) do
                      | YouTube
                    = link_to (season.respond_to?(:google_play_url) && season.google_play_url.presence) || "#",
                              class: "btn btn-outline-secondary btn-sm#{(season.respond_to?(:google_play_url) && season.google_play_url.present?) ? '' : ' disabled'}",
                              target: ((season.respond_to?(:google_play_url) && season.google_play_url.present?) ? "_blank" : nil),
                              rel: ((season.respond_to?(:google_play_url) && season.google_play_url.present?) ? "noopener" : nil) do
                      | Google Play
