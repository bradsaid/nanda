/ ===== SEO + JSON-LD: Seasons Index =====
- seasons_list  = Array(@seasons)
- total_seasons = seasons_list.size
- total_episodes = seasons_list.sum { |s| (s.respond_to?(:episodes) ? s.episodes.size : 0) }

- content_for :title, "Naked and Afraid Seasons"
- content_for :meta_description, "Browse #{total_seasons} seasons (#{total_episodes} total episodes) of Naked and Afraid. Jump to a series and find where to watch."
- content_for :keywords, "Naked and Afraid seasons, episode guide, where to watch"
- content_for :canonical_url, request.original_url
- content_for :og_title, "Naked and Afraid Seasons"
- content_for :og_description, "All seasons organized by series with episode counts and streaming links."

/ JSON blob for schema (helper builds JSON; single line keeps Slim happy)
- data = seasons_index_json_payload(seasons: seasons_list)
script type="application/json" id="seasons-index-jsonld-data"= data
= javascript_import_module_tag "json_ld/seasons_index", defer: true
/ ===== end SEO + JSON-LD =====

.pb-2.mb-3.border-bottom.site-header
  .d-flex.align-items-center.justify-content-between.flex-wrap.gap-2
    h1.h3.mb-0.logo Seasons

- if @seasons.blank?
  .text-muted.py-5.text-center No seasons found.
- else
  / === Series jump select (Stimulus) ===
  .form-floating.mb-3(style="max-width: 360px;" data-controller="season-jump")
    select.form-select#series-jump data-season-jump-target="select" data-action="change->season-jump#jump"
      option value=""
      - @seasons.group_by(&:series).each do |series, _|
        - next unless series
        option value="series-#{series.id}" = series.name
    label for="series-jump" Jump to a series

  .table-responsive
    table.table.table-striped.table-hover.mb-0
      - @seasons.group_by(&:series).each do |series, seasons|
        tbody(id=(series ? "series-#{series.id}" : nil))
          / Forest-green series title row (you already have .series-header css)
          tr.series-header
            td(colspan="3") = series&.name || "Unknown Series"

          / Per-series column headers
          tr.table-light.subhead-row
            th(scope="col") Season
            th(scope="col") Episodes
            th(scope="col") Where to Watch

          - seasons.sort_by(&:number).each do |season|
            - services = @season_services.dig(season.series&.name, season.number) || {}
            tr.align-middle
              td.fw-semibold
                = link_to "Season #{season.number}", season_path(season), class: "text-decoration-none"
              td = season.respond_to?(:episodes) ? season.episodes.size : "—"
              td
                - if services.any?
                  .d-flex.flex-wrap.gap-2
                    - services.each do |service_key, url|
                      = link_to url, target: "_blank", rel: "noopener", class: "btn btn-primary btn-sm" do
                        = streaming_label(service_key)
                - else
                  span.text-muted —



