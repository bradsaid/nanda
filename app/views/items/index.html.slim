/ ===== Items Index =====
- content_for :title, "Items"

.container.my-4
  .d-flex.flex-wrap.align-items-center.justify-content-between.gap-3.mb-3
    h1.h3.mb-0 Items

  / ===== Filters =====
  = form_with url: items_path, method: :get, local: true, class: "card shadow-sm mb-4" do
    .card-header.d-flex.align-items-center.gap-2
      span.me-2(aria-hidden="true") ðŸ”Ž
      span Filter
    .card-body.pb-3
      .row.g-3
        .col-md-4
          = label_tag :q, "Search items", class: "form-label"
          = text_field_tag :q, @q, placeholder: "e.g. machete", class: "form-control"
        .col-md-4
          = label_tag :country, "Country", class: "form-label"
          = select_tag :country,
              options_for_select([["All Countries", ""]] + @countries.map { |c| [c, c] }, @country),
              class: "form-select"
        .col-12.col-md-auto.d-flex.align-items-end.gap-2
          = submit_tag "Apply", class: "btn btn-dark mb-1"
          = link_to "Reset", items_path, class: "btn btn-light mb-1"

  / ===== Top Lists (Adjusted totals) =====
  .row.g-4
    .col-lg-6
      .card.shadow-sm.h-100
        .card-header.d-flex.justify-content-between.align-items-center
          span.fw-medium Top Brought Items
          span.small.text-muted = "#{@top_brought.sum { |r| r.read_attribute(:total).to_i }} overall"
        .table-responsive
          table.table.table-sm.table-hover.mb-0
            thead.table-light
              tr
                th Item
                th.text-end Total 
            tbody
              - if @top_brought.blank?
                tr
                  td.text-muted.py-4(colspan="2") No data
              - else
                - @top_brought.each do |r|
                  tr
                    td = link_to r.name, item_path(r.id)
                    td.text-end = r.read_attribute(:total).to_i

    .col-lg-6
      .card.shadow-sm.h-100
        .card-header.d-flex.justify-content-between.align-items-center
          span.fw-medium Top Given Items
          span.small.text-muted = "#{@top_given.sum { |r| r.read_attribute(:total).to_i }} overall"
        .table-responsive
          table.table.table-sm.table-hover.mb-0
            thead.table-light
              tr
                th Item
                th.text-end Total 
            tbody
              - if @top_given.blank?
                tr
                  td.text-muted.py-4(colspan="2") No data
              - else
                - @top_given.each do |r|
                  tr
                    td = link_to r.name, item_path(r.id)
                    td.text-end = r.read_attribute(:total).to_i


  / ===== Rarest Items (by adjusted total occurrences > 0) =====
  .card.shadow-sm.mt-4
    .card-header.fw-medium Rarest Items
    .table-responsive
      table.table.table-sm.table-hover.mb-0
        thead.table-light
          tr
            th Item
            th.text-end Total 
            th.text-end Brought 
            th.text-end Given 
        tbody
          - if @rarest.blank?
            tr
              td.text-muted.py-4(colspan="4") No data
          - else
            - @rarest.each do |r|
              tr
                td = link_to r.name, item_path(r.id)
                td.text-end = r.read_attribute(:total).to_i
                td.text-end = r.read_attribute(:brought_total).to_i
                td.text-end = r.read_attribute(:given_total).to_i

  / ===== Items by Type =====
  .card.shadow-sm.mt-4
    .card-header.fw-medium Items by Type
    .table-responsive
      table.table.table-sm.table-hover.mb-0
        thead.table-light
          tr
            th Type
            th.text-end Items
        tbody
          - if @items_by_type.blank?
            tr
              td.text-muted.py-4(colspan="2") No data
          - else
            - @items_by_type.each do |type, count|
              tr
                td = link_to type, type_items_path(type), class: "text-decoration-none"
                td.text-end = count


  / ===== Items per Country (unique per episode) =====
  .row.g-4.mt-1
    - (@items_by_country || {}).each do |country, rows|
      .col-lg-6
        .card.shadow-sm.h-100
          .card-header.d-flex.justify-content-between.align-items-center
            span.fw-medium = (country.presence || "Unknown")
            span.small.text-muted = "#{rows.sum { |r| r.read_attribute(:total).to_i }} total"
          .table-responsive
            table.table.table-sm.table-hover.mb-0
              thead.table-light
                tr
                  th Item
                  th.text-end Episodes
              tbody
                - if rows.blank?
                  tr
                    td.text-muted.py-4(colspan="2") No data
                - else
                  - rows.each do |r|
                    tr
                      td = link_to r.item_name, item_path(r.item_id)
                      td.text-end = r.read_attribute(:total).to_i

  / ===== Items per Country (adjusted â€” continuous=1) =====
  - if @items_by_country_adj.present?
    .row.g-4.mt-1
      - @items_by_country_adj.each do |country, rows|
        .col-lg-6
          .card.shadow-sm.h-100
            .card-header.d-flex.justify-content-between.align-items-center
              span.fw-medium = "#{country.presence || 'Unknown'} "
              span.small.text-muted = "#{rows.sum { |r| r.read_attribute(:total_adj).to_i }} total"
            .table-responsive
              table.table.table-sm.table-hover.mb-0
                thead.table-light
                  tr
                    th Item
                    th.text-end Episodes
                tbody
                  - if rows.blank?
                    tr
                      td.text-muted.py-4(colspan="2") No data
                  - else
                    - rows.each do |r|
                      tr
                        td = link_to r.item_name, item_path(r.item_id)
                        td.text-end = r.read_attribute(:total_adj).to_i
